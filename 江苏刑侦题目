#include <iostream>
using namespace std;

/*
question number:123456789 10
question answer:ABCD->1234
*/
short give1[]={1,2,3,4};
short give2[]={3,4,1,2};
short give3[]={3,6,2,4};
short give4[4][2]={{1,5},{2,7},{1,9},{6,10}};
short give5[]={8,4,9,7};
short give6[4][2]={{2,4},{1,6},{3,10},{5,9}};
short give7[]={3,2,1,4};
short give8[]={7,5,2,10};
short give9[]={6,10,2,9};
short give10[]={3,2,4,1};
/*
1: 2,3: 2,3,4,5,6,   8,give[6][choose[6]]
                        8      
                     1  8
                     10 8
                     9  8           
2: 1,9,10,7
*/
int flag = 0,i=0;
short j1,j2,j3,j4,j5,j6,j7,j8;
short choose[11]={1,1,1,1,1,1,1,1,1,1,1};
void show(){
	cout<<"choose:"<<endl;
	for(int i=1;i<11;i++){
		cout<<i<<":"<<choose[i]<<" ";
	}
	cout<<endl;
}
void judge(){
	if(choose[give5[choose[5]-1]]==choose[5] && (choose[give8[choose[8]-1]]-choose[1] != 1 && give8[choose[8]-1]-choose[1] != -1) 
			&& ((choose[1]==choose[6])!=(choose[5]==choose[give9[choose[9]-1]]))
			&& choose[give4[choose[4]-1][1]]==choose[give4[choose[4]-1][0]])
	{
		short index[5]={0,0,0,0,0};
		for(int i=1;i<11;i++){
			index[choose[i]]++;
		}
		int maxx=-1,maxindex=0,minx = 1000000,minindex=0;
		for(int i=1;i<5;i++){
			if(index[i]<minx){
				minx=index[i];
				minindex=i;
			}
			if(index[i]>maxx){
				maxx=index[i];
				maxindex=i;
			}
		}
		if(minindex==give7[choose[7]-1] && maxx - minx == give10[choose[10]-1]){
			cout<<"get answer"<<endl;
			show();
		}
	}
}
void loops(){
		for(j1=0;j1<4;j1++){
			for(j2=0;j2<4;j2++){
				for(j3=0;j3<4;j3++){
					if(j1==j3){
						continue;
					}
					choose[give3[0]]=choose[give3[1]]=choose[give3[2]]=choose[give3[3]]=j1+1;
					choose[give3[j2]]=j3+1;
					choose[5]=give2[choose[2]-1];
					if(choose[6]==1){
						if(choose[2]!=choose[4]){
							continue;
						}
						choose[8]=choose[2];
						for(j4=0;j4<4;j4++){
							for(j5=0;j5<4;j5++){
								for(j6=0;j6<4;j6++){
									for(j7=0;j7<4;j7++){
										choose[1]=j4+1;
										choose[7]=j5+1;
										choose[9]=j6+1;
										choose[10]=j7+1;
										judge();
									}
								}
							}
						}
					}
					
					else if(choose[6]==2){
						choose[1]=choose[8]=choose[6];
						for(j4=0;j4<4;j4++){
							for(j5=0;j5<4;j5++){
								for(j6=0;j6<4;j6++){
									choose[10]=j4+1;
									choose[7]=j5+1;
									choose[9]=j6+1;
									judge();
								}	
							}
						}
					}else if(choose[6]==3){
						choose[10]=choose[8]=choose[3];
						for(j4=0;j4<4;j4++){
							for(j5=0;j5<4;j5++){
								for(j6=0;j6<4;j6++){
									choose[1]=j4+1;
									choose[7]=j5+1;
									choose[9]=j6+1;
									judge();
								}
									
							}
						}
					}else if(choose[6]==4){
						choose[9]=choose[8]=choose[5];
						for(j4=0;j4<4;j4++){
							for(j5=0;j5<4;j5++){
								for(j6=0;j6<4;j6++){
									choose[1]=j4+1;
									choose[7]=j5+1;
									choose[10]=j6+1;
									judge();
								}	
							}
						}
					}

				}
			}
		}
}
int main(){
	loops();
	system("pause");
} 
